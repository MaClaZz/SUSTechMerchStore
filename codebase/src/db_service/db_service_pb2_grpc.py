# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import db_service_pb2 as db__service__pb2

GRPC_GENERATED_VERSION = '1.66.2'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in db_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class DBServiceStub(object):
    """Service definitions
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Greet = channel.unary_unary(
                '/dbservice.DBService/Greet',
                request_serializer=db__service__pb2.Empty.SerializeToString,
                response_deserializer=db__service__pb2.GreetResponse.FromString,
                _registered_method=True)
        self.Register = channel.unary_unary(
                '/dbservice.DBService/Register',
                request_serializer=db__service__pb2.RegisterRequest.SerializeToString,
                response_deserializer=db__service__pb2.UserResponse.FromString,
                _registered_method=True)
        self.LoginUser = channel.unary_unary(
                '/dbservice.DBService/LoginUser',
                request_serializer=db__service__pb2.LoginRequest.SerializeToString,
                response_deserializer=db__service__pb2.TokenResponse.FromString,
                _registered_method=True)
        self.GetUser = channel.unary_unary(
                '/dbservice.DBService/GetUser',
                request_serializer=db__service__pb2.UserRequest.SerializeToString,
                response_deserializer=db__service__pb2.UserResponse.FromString,
                _registered_method=True)
        self.DeactivateUser = channel.unary_unary(
                '/dbservice.DBService/DeactivateUser',
                request_serializer=db__service__pb2.UserRequest.SerializeToString,
                response_deserializer=db__service__pb2.GenericResponse.FromString,
                _registered_method=True)
        self.ListProducts = channel.unary_unary(
                '/dbservice.DBService/ListProducts',
                request_serializer=db__service__pb2.Empty.SerializeToString,
                response_deserializer=db__service__pb2.ProductListResponse.FromString,
                _registered_method=True)
        self.GetProduct = channel.unary_unary(
                '/dbservice.DBService/GetProduct',
                request_serializer=db__service__pb2.ProductRequest.SerializeToString,
                response_deserializer=db__service__pb2.ProductResponse.FromString,
                _registered_method=True)
        self.PlaceOrder = channel.unary_unary(
                '/dbservice.DBService/PlaceOrder',
                request_serializer=db__service__pb2.OrderRequest.SerializeToString,
                response_deserializer=db__service__pb2.GenericResponse.FromString,
                _registered_method=True)
        self.CancelOrder = channel.unary_unary(
                '/dbservice.DBService/CancelOrder',
                request_serializer=db__service__pb2.OrderRequest.SerializeToString,
                response_deserializer=db__service__pb2.GenericResponse.FromString,
                _registered_method=True)
        self.GetOrder = channel.unary_unary(
                '/dbservice.DBService/GetOrder',
                request_serializer=db__service__pb2.OrderRequest.SerializeToString,
                response_deserializer=db__service__pb2.OrderResponse.FromString,
                _registered_method=True)


class DBServiceServicer(object):
    """Service definitions
    """

    def Greet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Register(self, request, context):
        """User operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoginUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeactivateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListProducts(self, request, context):
        """Product operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PlaceOrder(self, request, context):
        """Order operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DBServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Greet': grpc.unary_unary_rpc_method_handler(
                    servicer.Greet,
                    request_deserializer=db__service__pb2.Empty.FromString,
                    response_serializer=db__service__pb2.GreetResponse.SerializeToString,
            ),
            'Register': grpc.unary_unary_rpc_method_handler(
                    servicer.Register,
                    request_deserializer=db__service__pb2.RegisterRequest.FromString,
                    response_serializer=db__service__pb2.UserResponse.SerializeToString,
            ),
            'LoginUser': grpc.unary_unary_rpc_method_handler(
                    servicer.LoginUser,
                    request_deserializer=db__service__pb2.LoginRequest.FromString,
                    response_serializer=db__service__pb2.TokenResponse.SerializeToString,
            ),
            'GetUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUser,
                    request_deserializer=db__service__pb2.UserRequest.FromString,
                    response_serializer=db__service__pb2.UserResponse.SerializeToString,
            ),
            'DeactivateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeactivateUser,
                    request_deserializer=db__service__pb2.UserRequest.FromString,
                    response_serializer=db__service__pb2.GenericResponse.SerializeToString,
            ),
            'ListProducts': grpc.unary_unary_rpc_method_handler(
                    servicer.ListProducts,
                    request_deserializer=db__service__pb2.Empty.FromString,
                    response_serializer=db__service__pb2.ProductListResponse.SerializeToString,
            ),
            'GetProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProduct,
                    request_deserializer=db__service__pb2.ProductRequest.FromString,
                    response_serializer=db__service__pb2.ProductResponse.SerializeToString,
            ),
            'PlaceOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.PlaceOrder,
                    request_deserializer=db__service__pb2.OrderRequest.FromString,
                    response_serializer=db__service__pb2.GenericResponse.SerializeToString,
            ),
            'CancelOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelOrder,
                    request_deserializer=db__service__pb2.OrderRequest.FromString,
                    response_serializer=db__service__pb2.GenericResponse.SerializeToString,
            ),
            'GetOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrder,
                    request_deserializer=db__service__pb2.OrderRequest.FromString,
                    response_serializer=db__service__pb2.OrderResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dbservice.DBService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('dbservice.DBService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class DBService(object):
    """Service definitions
    """

    @staticmethod
    def Greet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dbservice.DBService/Greet',
            db__service__pb2.Empty.SerializeToString,
            db__service__pb2.GreetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dbservice.DBService/Register',
            db__service__pb2.RegisterRequest.SerializeToString,
            db__service__pb2.UserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LoginUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dbservice.DBService/LoginUser',
            db__service__pb2.LoginRequest.SerializeToString,
            db__service__pb2.TokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dbservice.DBService/GetUser',
            db__service__pb2.UserRequest.SerializeToString,
            db__service__pb2.UserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeactivateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dbservice.DBService/DeactivateUser',
            db__service__pb2.UserRequest.SerializeToString,
            db__service__pb2.GenericResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListProducts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dbservice.DBService/ListProducts',
            db__service__pb2.Empty.SerializeToString,
            db__service__pb2.ProductListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dbservice.DBService/GetProduct',
            db__service__pb2.ProductRequest.SerializeToString,
            db__service__pb2.ProductResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PlaceOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dbservice.DBService/PlaceOrder',
            db__service__pb2.OrderRequest.SerializeToString,
            db__service__pb2.GenericResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dbservice.DBService/CancelOrder',
            db__service__pb2.OrderRequest.SerializeToString,
            db__service__pb2.GenericResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dbservice.DBService/GetOrder',
            db__service__pb2.OrderRequest.SerializeToString,
            db__service__pb2.OrderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
