from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class User(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, sid=None, username=None, email=None, created_at=None):  # noqa: E501
        """User - a model defined in OpenAPI

        :param id: The id of this User.  # noqa: E501
        :type id: int
        :param sid: The sid of this User.  # noqa: E501
        :type sid: str
        :param username: The username of this User.  # noqa: E501
        :type username: str
        :param email: The email of this User.  # noqa: E501
        :type email: str
        :param created_at: The created_at of this User.  # noqa: E501
        :type created_at: datetime
        """
        self.openapi_types = {
            'id': int,
            'sid': str,
            'username': str,
            'email': str,
            'created_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'sid': 'sid',
            'username': 'username',
            'email': 'email',
            'created_at': 'created_at'
        }

        self._id = id
        self._sid = sid
        self._username = username
        self._email = email
        self._created_at = created_at

    @classmethod
    def from_dict(cls, dikt) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The User of this User.  # noqa: E501
        :rtype: User
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this User.


        :return: The id of this User.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this User.


        :param id: The id of this User.
        :type id: int
        """

        self._id = id

    @property
    def sid(self) -> str:
        """Gets the sid of this User.


        :return: The sid of this User.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid: str):
        """Sets the sid of this User.


        :param sid: The sid of this User.
        :type sid: str
        """

        self._sid = sid

    @property
    def username(self) -> str:
        """Gets the username of this User.


        :return: The username of this User.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username: str):
        """Sets the username of this User.


        :param username: The username of this User.
        :type username: str
        """

        self._username = username

    @property
    def email(self) -> str:
        """Gets the email of this User.


        :return: The email of this User.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this User.


        :param email: The email of this User.
        :type email: str
        """

        self._email = email

    @property
    def created_at(self) -> datetime:
        """Gets the created_at of this User.


        :return: The created_at of this User.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: datetime):
        """Sets the created_at of this User.


        :param created_at: The created_at of this User.
        :type created_at: datetime
        """

        self._created_at = created_at
