# https://docs.docker.com/reference/compose-file/
services:
  # database for persistant data storage
  postgres:
    # https://hub.docker.com/_/postgres
    image: postgres:17
    container_name: postgres
    hostname: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "2222:5432"   # Expose PostgreSQL to localhost ("local:container")
    volumes:
      - pg_data:/var/lib/postgresql/data        # default PGDATA location: /var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d   # init run all scripts by default in: /docker-entrypoint-initdb.d

  # kafka message queue with zookeeper config management
  zookeeper:
    # https://hub.docker.com/r/confluentinc/cp-zookeeper
    image: confluentinc/cp-zookeeper:7.7.1
    container_name: zookeeper
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    # https://hub.docker.com/r/confluentinc/cp-kafka
    image: confluentinc/cp-kafka:7.7.1
    container_name: kafka
    hostname: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    ports:
      - "2222:9092"  # For internal Docker use
      - "2222:9093"  # For external access

  kafka-topic-creator:
    image: confluentinc/cp-kafka:7.7.1
    depends_on:
      - kafka
    entrypoint: >
      bash -c "
      /bin/kafka-topics --create --topic log-channel --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1;
      "

  db_service:
#    image: db_service_image
    build:
      context: ./src/db_service
    container_name: db_service
#    hostname: db_service
    ports:
      - "2222:50051"  # Expose gRPC DB port
    environment:
      DB_USER: dncc
      DB_PASSWORD: dncc
      DB_NAME: goodsstore
      DB_HOST: postgres
      DB_PORT: 2222
    depends_on:
      - postgres
#    networks:
#      - app_network

  logging_service:
#    image: local_publisher  # Path to the Dockerfile for the gRPC Logging service
    build:
      context: ./src/logging_service
    container_name: logging_service
    ports:
      - "2222:50052"  # Expose gRPC Logging port
    depends_on:
      - zookeeper
      - kafka
      - kafka-topic-creator
#    networks:
#      - app_network

  client:
#    image: client_stub
    build:
      context: ./src/api_service
    container_name: api_service
    ports:
      - "2222:5000"  # Expose Flask app port
    environment:
#      DB_USER: dncc
#      DB_PASSWORD: dncc
#      DB_NAME: goodsstore
#      DB_HOST: postgres
#      DB_PORT: 5432
#      FLASK_APP: ClientStub.py
#      FLASK_ENV: test
#      POSTGRES_USER: ${POSTGRES_USER}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#      POSTGRES_DB: ${POSTGRES_DB}
#      POSTGRES_HOST: postgres
#      POSTGRES_PORT: 5432
#      FLASK_RUN_PORT: 5000
      - JWT_SECRET_KEY=your_jwt_secret_key  # Replace with your secret key
    depends_on:
      - postgres
      - kafka
      - db_service
      - logging_service
#    networks:
#      - app_network
  # Flask servers
  flask_server1:
    # https://docs.docker.com/reference/compose-file/build/
    build:
      context: ./src/api_service
    environment:
      FLASK_PORT: 5000
      SERVER_NAME: "Flask Server 1"
    depends_on:
      - client
  flask_server2:
    build:
      context: ./src/api_service
    environment:
      FLASK_PORT: 5000
      SERVER_NAME: "Flask Server 2"
    depends_on:
      - client
  flask_server3:
    build:
      context: ./src/api_service

    environment:
      FLASK_PORT: 5000
      SERVER_NAME: "Flask Server 3"
    depends_on:
      - client
  # Nginx for load balancing
  nginx:
    image: nginx:1.27
    volumes:
      # https://docs.docker.com/reference/compose-file/services/#short-syntax-5
      - ./src/api_service/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "2222:80"
    depends_on:
      - flask_server1
      - flask_server2
      - flask_server3
volumes:
  pg_data:  # A placeholder volume without any configuration
